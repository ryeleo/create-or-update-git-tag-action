name: Create or Update a Git Tag
description: >
  Create or update a git tag.
  Only update the git tag if the message of the git tag is changed.

  This is useful if you are trying to store some data within a git tag message.

  NOTE: Will force update the git tag if an update is required.
inputs:
  tag-name:
    description: Git tag to create or update.
    required: true
  tag-message:
    description: Message to add to the tag.
    required: true


runs:
  using: composite
  steps:
    -
      name: inputs validation
      run: |
        [[ "${{ inputs.tag-name }}" ]] || echo "tag-name input is empty"
        [[ "${{ inputs.tag-message }}" ]] || echo "tag-message input is empty"
        [[ "${{ inputs.tag-name }}" ]] || exit 1
        [[ "${{ inputs.tag-message }}" ]] || exit 1
      shell: bash
    -
      name: Get all tags within repository
      run: git fetch --tags --prune-tags
      shell: bash
    - name: Get existing tag message
      id: existing-message
      run: >
        echo "result=$(
        git tag --list --format='%(contents)' $TAG
        )" >> $GITHUB_OUTPUT
      shell: bash
      env:
        TAG: ${{ inputs.tag-name }}
    -
      name: debug
      run: |
        echo "steps.existing-message.outputs.result: ${{steps.existing-message.outputs.result}}"
        echo "inputs.tag-message: ${{ inputs.tag-message }}"
        echo "TAG: $TAG"
        echo "MSG: $MSG"
        echo "steps.existing-message.outputs.result != inputs.tag-message: ${{steps.existing-message.outputs.result != inputs.tag-message}}"
        echo "steps.existing-message.outputs.result != env.MSG: ${{steps.existing-message.outputs.result != env.MSG }}"
      shell: bash
      env:
        TAG: ${{ inputs.tag-name }}
        MSG: ${{ inputs.tag-message }}
    -
      name: Create or Update if required
      if: steps.existing-message.outputs.result != inputs.tag-message
      run: |
        git config --global user.name 'NS DevOps'
        git config --global user.email 'nsdevops@uoregon.edu'
        git tag --force --message="$MESSAGE" "$TAG" $(git rev-parse HEAD)
        git push --force origin "$TAG"
      env:
        TAG: ${{ inputs.tag-name }}
        MESSAGE: ${{ inputs.tag-message }}
      shell: bash
